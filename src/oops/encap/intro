Abstraction:
-> Hide unnecessary data and expose only what ever is required.
->for every action/task there should be only function.


Case#1:
-----------------------------------------------------
Class Vehicle{
   
    //instance variables
    wheel,
    engine
    fuel.
    
    void brake(){
    //logic to stop car
    }
      
    void acclerate(){
    //logic to speed accelerate
    }
      
	void showFuelReading(){
	//logic to show fuel reading
	}
  }
    
   
  
    
    
    
#call the instance method instead of changing/accessing it directly

    
    
Req#1:To stop vehicle 
solution:
call the brake()

brake() -> changing the values for the instance variable wheel + engine



Req#2:speedup vehicle
solution) call accelarate() function.

acclearate() - >changing the values for the instance variable wheel + engine using fuel..



Req#3:see the fuel reading:
solution) call the showFuelReading() function..
shows the current state of the fuel



conclusion:
--------------
-> Hide the instance variables and expose the methods.
-> change the instance variables/read the instance variables using the methods.
[any action on obj perform using the method]
-> one action == one method





changes in class:
  1. make instance variables as private
  2.expose the methods to set data and read data using setters & getters.
  for every instance variables provide setter and getter 
  
  private instance variables cannot be accessed outside the class.
  
  
  
How to  make instance variables as private
------------------------------------------------
   
public class Person {
   private int id;
   private String name;
   private int age;

}


public : visible outside the class
private : visible only inside the class


impact:
Person p = new Person();
p.id=100;   // gives compilation as id is private
p.name= "user1"; // gives compilation as name is private
p.age=45;  // gives compilation as age is private

 


 2.How to write setters & getters:
 ------------------------------------------------------------------
 private int id;

 public int getId() {
		return id;
}

public void setId(int id) {
		this.id = id;
}
	
	
	- for accessing the instance variable which are private we need the setters and getters

instead of writing
p.id=1000; // dont use
p.setId(1000); //start using 
	
	
	 
  
    
 Person p = new Person();
 
//set data directly
p.id=9000;
p.name="user1";
p.age=45;

//for set data to object use the methods.
  
  